---

- name: Ensure Jenkins Yum repo present
  get_url: url={{ jenkins_repo_url }} dest=/etc/yum.repos.d/jenkins.repo mode=0644
  when: ansible_os_family == 'RedHat'
  tags:
  - system
  - jenkins
  - build

- name: Add Jenkins repo GPG key
  command: rpm --import {{ jenkins_repo_key_url }}
  when: ansible_os_family == 'RedHat'
  tags:
  - system
  - jenkins
  - build

- name: Ensure Jenkins installed
  yum: name=jenkins state=present
  when: ansible_os_family == 'RedHat'
  tags:
  - system
  - jenkins
  - build

- name: Local Ansible facts
  template: src={{ role_local_facts }}/jenkins.fact dest=/{{ role_local_facts }}/jenkins.fact owner=root group=root mode=0644
  tags:
  - config
  - jenkins-config
  - facts
  - build

- name: Deploy provision_base_ami to usr/bin
  template: src=usr/bin/provision_base_ami dest=/usr/bin/provision_base_ami owner=root group=root mode=0755
  tags:
  - config
  - jenkins-config
  - build

- name: Nginx proxy
  template: src=etc/nginx/conf.d/jenkins.conf dest=/etc/nginx/conf.d/jenkins.conf owner=root group=root mode=0644
  notify:
  - restart nginx
  tags:
  - config
  - jenkins-config
  - build

- name: create jenkins directory job
  action: file path=/var/lib/jenkins/jobs/{{item}} owner=jenkins state=directory
  with_items: j_jobs

- name: configure jenkins job
  action: copy src=jobs/{{item}}/config.xml dest=/var/lib/jenkins/jobs/{{item}}/config.xml owner=jenkins
  with_items: j_jobs


# Make sure Jenkins starts, then configure Jenkins.
- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes

- name: Wait for Jenkins to start up before proceeding.
  shell: curl --head --silent http://{{ jenkins_hostname }}:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://{{ jenkins_hostname }}:8080/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  tags:
  - config
  - jenkins-config
  - build

- name: Ensure Jenkins installed
  yum: name=maven state=present
  when: ansible_os_family == 'RedHat'
  tags:
  - system
  - jenkins
  - maven
  - build



# Update Jenkins and install configured plugins.
- include: plugins.yml
