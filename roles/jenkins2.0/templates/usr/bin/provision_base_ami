#!/bin/bash -ex

## Build AMI using Packer

# change dir to calling jenkins job workspace
cd $WORKSPACE


# All .yml in running dir
AMI_PROFILES=($(ls *.yml))
# Timestamp for image
DATE=$(date +%Y-%m-%d-%H-%M)

MAC_ADDR=$(curl -s http://169.254.169.254/latest/meta-data/mac)
# VPC to launch instance in
VPC_ID=$(curl -s http://169.254.169.254/latest/meta-data/network/interfaces/macs/${MAC_ADDR}/vpc-id)
# Subnet ID to launch instance in (Required in VPC)
SUBNET_ID=$(curl -s http://169.254.169.254/latest/meta-data/network/interfaces/macs/${MAC_ADDR}/subnet-id)

REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone/ | sed '$s/.$//')

# Instance type http://www.ec2instances.info/
INSTANCE_TYPE=t2.small
# Packer file
PACKER_FILE=base.json

# Capture some vars if running outside of Jenkins
if [[ -z "$AMI_ID" ]]; then
  read -p "AMI ID (HVM): " AMI_ID
fi

if [[ -z "$BUILD_NUMBER" ]]; then
  read -p "Build Number for this ami: " BUILD_NUMBER
fi

if [[ -z "$AMI_PROFILE" ]]; then
  echo -n "AMI Profile to provision " 
  echo -n ${AMI_PROFILES[@]//\.yml/} ":"
  read AMI_PROFILE
fi

if [ ! -f ${AMI_PROFILE}.yml ]; then
  eval "echo \"$(< template_ami_profile.yml)\"" > ${AMI_PROFILE}.yml
fi

# Log file
LOG=$BUILD_NUMBER-$AMI_PROFILE.log

# Clean up
if [ -f AMI-$AMI_PROFILE ]; then
  rm -f AMI-$AMI_PROFILE
fi

# Run packer
/usr/bin/packer build \
-machine-readable \
-var hvm_amiid=$AMI_ID \
-var build=$BUILD_NUMBER \
-var ami_profile=$AMI_PROFILE \
-var date=$DATE \
-var vpc_id=$VPC_ID \
-var subnet_id=$SUBNET_ID \
-var region=$REGION \
-var instance_type=$INSTANCE_TYPE \
$PACKER_FILE \
| tee $LOG

AMI_NAME=$(grep 'Creating the AMI' $LOG|head -n1|cut -d':' -f3|sed 's/ //g')
AMIS=$(grep ',id,' $LOG |cut -d',' -f6)

if [[ -z "$AMIS" ]]; then
  exit 1
fi

for AMI in $AMIS; do
  echo $AMI_NAME > AMI-$AMI_PROFILE
  echo $AMI >> AMI-$AMI_PROFILE
done


